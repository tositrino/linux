diff -Naur linux-x/init/main.c linux-y/init/main.c
--- linux-x/init/main.c	2017-01-12 08:22:13.000000000 +0100
+++ linux-y/init/main.c	2017-01-12 08:35:23.792667285 +0100
@@ -7,7 +7,45 @@
  *  Added initrd & change_root: Werner Almesberger & Hans Lermen, Feb '96
  *  Moan early if gcc is old, avoiding bogus kernels - Paul Gortmaker, May '96
  *  Simplified starting of init:  Michael A. Griffith <grif@acm.org>
- */
+ *
+ *  THS changes
+ *  -----------
+ *  - requires special includes : 
+ *    #ifdef __COLORED_BANNER__
+ *    #include <linux/kd.h> (kernel 2.6 only)
+ *    #include <linux/vt.h> (since 2.6.15 for vt_mode definition)
+ *    #include <linux/console_struct.h>
+ *    #endif
+ *    (added after asm/bugs.h)
+ *  - colored banner defines
+ *    __COLORED_BANNER__ : enable colored banner at compile time 
+ *  - added extern data
+ *    extern char  cbanner_wait;
+ *    extern char  cbanner_mode;
+ *    extern short cbanner_bcolor;
+ *    extern short cbanner_tcolor;
+ *    extern long  cbanner_delay;
+ *    extern short cbanner_count;
+ *    extern char *cbanner_data[];
+ *  - added functions and setup hook :
+ *    static int __init cbanner_setup(char *options)
+ *    function cbanner_display(void)
+ *    __setup("cbanner=", cbanner_setup);
+ *
+ *  - parameter syntax : 
+ *      cbanner=on,off,wait,delay:<val>,bid:<val>,bcol:<val>,tcol:<val>"
+ *      on|off      - enable/disable colored banner
+ *      wait        - enable delay after banner output
+ *      delay:<val> - set delay count (default is 200, range 1-9999)
+ *                    this is about half a second per "***" output so
+ *                    the full duration is about 5 seconds
+ *      bid:<val>   - banner id (1-3 currently), default is 1
+ *      bcol:<val>  - banner color (1-255), default 0xb (lightcyan)
+ *      tcol:<val>  - text color (1-255), default 0x9 (lightblue)
+ *
+*/
+
+#define __COLORED_BANNER__
 
 #define DEBUG		/* Enable initcall_debug */
 
@@ -107,6 +145,23 @@
 enum system_states system_state __read_mostly;
 EXPORT_SYMBOL(system_state);
 
+#ifdef __COLORED_BANNER__
+
+#include <linux/kd.h>
+#include <linux/vt.h>
+#include <linux/console_struct.h>
+
+extern unsigned char   cbanner_wait;
+extern unsigned char   cbanner_mode;
+extern unsigned short  cbanner_bcolor;
+extern unsigned short  cbanner_tcolor;
+extern unsigned long   cbanner_delay;
+extern unsigned short  cbanner_count;
+extern unsigned short  cbanner_id;
+extern char           *cbanner_data[];
+
+#endif
+
 /*
  * Boot command-line arguments
  */
@@ -353,6 +408,125 @@
 static inline void smp_prepare_cpus(unsigned int maxcpus) { }
 #endif
 
+#ifdef __COLORED_BANNER__
+
+static int __init cbanner_setup(char *options)
+{
+  char *myopt;
+  long oval;
+
+  if (!options || !*options) return 0;
+  printk("cbanner: %s\n",options);
+
+  while ((myopt = strsep (&options, ",")) != NULL) 
+  {
+	if (!*myopt) continue;
+
+	if (!strncmp(myopt, "wait", 4)) 
+    {
+	  printk("cbanner: wait mode enabled\n");
+      cbanner_wait=1;
+      continue;
+    }
+	if (!strncmp(myopt, "delay:", 6)) 
+    {
+      oval=simple_strtoul((myopt+6), NULL, 0);
+      if ( (oval>0) && (oval<=10000) )
+	  {
+	    cbanner_delay=(unsigned long)(oval);
+	    printk("cbanner: delay value set to %lu\n",cbanner_delay);
+	  }
+      else printk("cbanner: invalid delay value (%s)\n",myopt);
+      continue;     
+    }
+
+    if (!strncmp(myopt, "off", 3)) 
+	{
+	  printk("cbanner: banner disabled\n");
+	  cbanner_mode=0;
+      continue;
+	}
+    if (!strncmp(myopt, "on", 2)) 
+	{
+	  printk("cbanner: banner enabled\n");
+	  cbanner_mode=1;
+	  continue;
+	}
+	if (!strncmp(myopt, "bid:", 4)) 
+    {
+      oval=simple_strtoul((myopt+4), NULL, 0);
+      if ( (oval>0) && (oval<=cbanner_count) )
+	  {
+	    cbanner_id=(unsigned short)(oval-1);
+	    printk("cbanner: banner id set to %d\n",cbanner_id);
+	  }
+      else printk("cbanner: invalid banner id value (%s)\n",myopt);
+      continue;
+    }
+	if (!strncmp(myopt, "bcol:", 5)) 
+    {
+      oval=simple_strtoul((myopt+5), NULL, 0);
+      if ( (oval>0) && (oval<=0xff) )
+	  {
+	    cbanner_bcolor=(unsigned short)(oval);
+	    printk("cbanner: banner color set to 0x%x\n",cbanner_bcolor);
+	  }
+      else printk("cbanner: invalid banner color value (%s)\n",myopt);
+      continue;
+    }
+	if (!strncmp(myopt, "tcol:", 5)) 
+    {
+      oval=simple_strtoul((myopt+5), NULL, 0);
+      if ( (oval>0) && (oval<=0xff) )
+	  {
+	    cbanner_tcolor=(unsigned short)(oval);
+	    printk("cbanner: text color set to 0x%x\n",cbanner_tcolor);
+	  }
+      else printk("cbanner: invalid text color value (%s)\n",myopt);
+      continue;
+	}
+    printk("cbanner: invalid parameter (%s)\n",myopt);
+  }
+  return 0;
+}
+
+__setup("cbanner=", cbanner_setup);
+
+static void cbanner_display( void )
+{
+  extern char *saved_command_line;
+  unsigned long jstart,jwait;
+  unsigned short cc,vc=vc_cons[0].d->vc_attr;
+  if (cbanner_mode != 0)
+  {
+    cc=(cbanner_id << 1);
+    if (cbanner_bcolor) vc_cons[0].d->vc_attr = cbanner_bcolor;
+    printk("\n%s\n",cbanner_data[cc]);
+    if (cbanner_tcolor) vc_cons[0].d->vc_attr = cbanner_tcolor;
+    printk("%s\n",cbanner_data[cc+1]);
+    printk("%s\n",linux_banner);
+    printk("Kernel command line%s\n\n", saved_command_line);
+    vc_cons[0].d->vc_attr = vc;
+  }
+	  
+  if (cbanner_wait>0) 
+  {
+    printk("wait:");
+    jwait=(cbanner_delay * HZ)/1000;
+    for (cc=0;cc<0x10;cc++)
+    {    
+      vc_cons[0].d->vc_attr = cc;
+	  printk(" *");
+      jstart=jiffies;
+	  while ( jiffies-jstart < jwait ) ;
+    }
+    printk("\n\n");
+    vc_cons[0].d->vc_attr = vc;
+  }
+}
+
+#endif
+
 /*
  * We need to store the untouched command line for future reference.
  * We also need to store the touched command line since the parameter
@@ -627,6 +801,11 @@
 		late_time_init();
 	sched_clock_init();
 	calibrate_delay();
+
+#ifdef __COLORED_BANNER__
+    cbanner_display();
+#endif
+
 	pidmap_init();
 	anon_vma_init();
 	acpi_early_init();
diff -Naur linux-x/init/version.c linux-y/init/version.c
--- linux-x/init/version.c	2015-02-09 14:13:45.000000000 +0100
+++ linux-y/init/version.c	2017-01-12 08:42:10.587275929 +0100
@@ -4,7 +4,38 @@
  *  Copyright (C) 1992  Theodore Ts'o
  *
  *  May be freely distributed as part of Linux.
+ *
+ *  THS changes
+ *  -----------
+ *
+ *  - 17/03/06 kernel-4.10.1
+ *
+ *  - colored banner defines
+ *    __CBANNER_DEFAULT__ : define default banner id
+ *    __CBANNER_LOGO__    : define text logo color to use 
+ *    __CBANNER_TEXT__    : define logo color to use 
+ *    __CBANNER_DELAY__   : define wait time 
+ *  - added extern data
+ *    extern char  cbanner_wait;
+ *    extern char  cbanner_mode;
+ *    extern char *cbanner_list[];
+ *  - added functions and setup hook :
+ *    static int __init cbanner_setup(char *options)
+ *    function cbanner_display(void)
+ *    __setup("cbanner=", cbanner_setup);
+ *
+ *     0x05 - magenta
+ *     0x07 - standard
+ *     0x09 - lightblue
+ *     0x0b - lightcyan
+ * 
  */
+ 
+#define THS_RELEASE          "mmxvii-iii-vi"
+#define __CBANNER_DEFAULT__  0x00
+#define __CBANNER_LOGO__     0x08
+#define __CBANNER_TEXT__     0x09
+#define __CBANNER_DELAY__    0x200
 
 #include <generated/compile.h>
 #include <linux/module.h>
@@ -51,3 +82,60 @@
 	"%s version %s"
 	" (" LINUX_COMPILE_BY "@" LINUX_COMPILE_HOST ")"
 	" (" LINUX_COMPILER ") %s\n";
+
+unsigned char  cbanner_wait   = 0;
+unsigned char  cbanner_mode   = 1;
+unsigned short cbanner_bcolor = __CBANNER_LOGO__;
+unsigned short cbanner_tcolor = __CBANNER_TEXT__;
+unsigned long  cbanner_delay  = __CBANNER_DELAY__;
+unsigned short cbanner_count  = 3;
+unsigned short cbanner_id     = __CBANNER_DEFAULT__;
+
+const char *cbanner_data[]  = {
+
+                               //12345678901234567890123456789012345678901234567890123456789012345678901234567890
+                                "88888 8   8 888888                              e         8   eeee      8     \n"
+                                "  8   8   8 8        e   e  eeee eeeee  eeeee   8 e      e8   8  8     e8     \n"
+                                "  8e  8eee8 8eeeee   8   8  8    8   8  8   8   8888      8   8  8      8     \n"
+                                "  88  88  8     88   8eee8e 8eee 8eee8e 8e  8     8       8   8  8      8     \n"
+                                "  88  88  8 e   88   88   8 88   88   8 88  8   8888    8888  8888    8888    \n"
+                                "  88  88  8 8eee88   88   8 88ee 88   8 88  8   8888 88 8888  8888 88 8888    \n",
+
+                                "ths kernel release " THS_RELEASE " / linux-" UTS_RELEASE "\n",
+
+                                "e   e                                 e         8  eeee      8  o8o  db  o8o \n"
+                                "8   8   eeee eeeee  eeeee eeee e      8 e      e8  8  8     e8  o8888db8888o \n"
+                                "8eee8e  8    8   8  8   8 8    8      8888      8  8  8      8      odbo     \n"
+                                "88   8  8eee 8eee8e 8e  8 8eee 8e       8       8  8  8      8  o88o db o88o \n"
+                                "88   8  88   88   8 88  8 88   88     8888    8888 8888    8888 oo   db   oo \n"
+                                "88   8  88ee 88   8 88  8 88ee 88eee  8888 88 8888 8888 88 8888      db      \n",
+
+                                "ths kernel release " THS_RELEASE " / linux-" UTS_RELEASE "\n",
+
+                                "/-----------------------------------------\\\n"
+                                "|                  _/\\_                   |\n"
+                                "|  moc            <o88o>             con  |\n"
+                                "| oooooon          <88>        .moooooooo |\n"
+                                "| oocoooooooon.    <88>    .moooooooooooo |\n"
+                                "|  ooooooooooooon._d88b_.moooooooooooooo  |\n"
+                                "|   (oooooooooooooo8888ooooooooooooooo)   |\n"
+                                "|     (ooooooooooooo88ooooooooooooo)      |\n"
+                                "|        oooooooooo8888oooooooooo         |\n"
+                                "|               -ooo88ooo-                |\n"
+                                "|          .mooooooY88Yoooooon.           |\n"
+                                "|     __cooooooooo/ 88 \\oooooooooa,,      |\n"
+                                "|   _ooooooooooooo: oo :8oooooooooooa,    |\n"
+                                "|  /ooooooooooooo/  oo  \\oooooooooooo8\\   |\n"
+                                "|  oooooooooooo     oo     oooooooooooo   |\n"
+                                "|  \\oooooooo/       oo       \\oooooooo/   |\n"
+                                "|                   oo                    |\n"
+                                "|                   oo                    |\n"
+                                "|                   oo                    |\n"
+                                "|                   oo                    |\n"
+                                "|                   oo                    |\n"
+                                "\\-----------------------------------------/\n",
+
+                                "odonata kernel release " THS_RELEASE " / linux-" UTS_RELEASE "\n" 
+
+                             };
+
